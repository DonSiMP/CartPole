#!/usr/bin/python
"""
Script to run the cartpole demo.

"""
from __future__ import division
import numpy as np; npl = np.linalg
from scipy.interpolate import interp1d
import cartpole
import time

# Set-up dynamics and optimal controller
dyn = cartpole.Dynamics()
opt = cartpole.Optimizer(dyn)

# Frame problem
q0 = [0, 0, 0, 0]
qN = [1, np.pi, 0, 0]
tN = 3
dt = 0.01
goal = qN[0]
H = np.array((50, 5, 1)) * dt
rush = 0.5

# Get optimal control
opt_start_time = time.time()
Topt, Uopt, Qopt, opt_success = opt.make_trajectory(q0, qN, tN, H, rush=rush)
control = opt.make_controller(Topt, Uopt)
if not opt_success: print "OPTIMIZATION FAILED"
else: print "OPTIMIZATION SUCCEEDED"
print "TOTAL TIME TAKEN BY OPTIMIZATION: {}".format(np.round(time.time() - opt_start_time, 3))
print "----------------------------------------\n"

# Look at ideal plan or simulate its execution?
override = True  # True or None
if override:
    print "(visualizing ideal scenario)"
    override = interp1d(Topt, Qopt, kind="quadratic", assume_sorted=True,
                        axis=0, bounds_error=False, fill_value=Qopt[-1])

# Set-up simulator and run
sim = cartpole.Simulator(dyn)
sim.simulate(q0, control, tN=0, dt=dt, goal=goal, override=override)
